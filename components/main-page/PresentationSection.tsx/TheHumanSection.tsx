import TheHumanImage from "@/assets/images/the-human.webp";
import { PrimaryLink } from "@/components/PrimaryLink";
import { SectionTitle } from "@/components/SectionTitle";
import Image from "next/image";
import { Fragment } from "react";

const habilities = ["Produc Designer", "UX Designer", "UI Designer"];
const experiences = Array.from({ length: 4 }, (_, index) => ({
  id: index + 1,
  title: "UX/UI Designer",
  mode: "Freelance",
  Country: "Argentina",
  fromYear: 2021,
  toYear: 2022,
}));
export const TheHumanSection = () => {
  return (
    <section className="rr-section gap-10">
      <div className="flex flex-col items-center lg:items-end">
        <div className="flex flex-col gap-5">
          <Image
            src={TheHumanImage}
            alt="The Human"
            className="w-auto h-full max-h-[max(70vh,400px)] rounded-[1.25rem] object-contain"
          />
          <div className="flex flex-col gap-10">
            <div className="flex gap-x-10  items-center">
              <SocialButton
                icon={<WhatsIcon />}
                href="https://wa.me/5491126677230"
              />
              <div className="h-6 w-[1px] bg-white/30"></div>
              <SocialButton
                icon={<LinkedinIcon />}
                href="https://www.linkedin.com/in/ricardoreales"
              />
              <div className="h-6 w-[1px] bg-white/30"></div>
              <SocialButton
                icon={<WhatsIcon />}
                href="https://wa.me/5491126677230"
              />
            </div>
            <PrimaryLink href="/" variant="default">
              Let&apos;s work together
            </PrimaryLink>
          </div>
        </div>
      </div>

      <div className="flex flex-col ">
        <SectionTitle
          title="The Human Behind the Screen"
          description="I'm Ricardo Reales, a passionate UX/UI Designer based in Argentina. I craft intuitive and visually engaging digital experiences by blending research-driven design with a strong visual language."
        />
        <div className="flex justify-between border-y border-white/30 py-10 my-10 text-white/50 font-[300] text-[20px] leading-normal">
          {habilities.map((hability) => (
            <div key={hability}>
              <h4>{hability}</h4>
            </div>
          ))}
        </div>
        <div className="grid grid-cols-3 gap-y-5 text-white items-center font-[300] text-[20px] leading-normal w-full">
          {experiences.map((experience) => (
            <Fragment key={experience.id}>
              <div className="h-[60px] flex justify-start items-center">
                <h4 className="">{experience.title}</h4>
              </div>

              <div className="h-[60px] flex justify-center items-center">
                <p className="">
                  {experience.mode} - {experience.Country}
                </p>
              </div>
              <div className="h-[60px] flex justify-end items-center">
                <p className=" text-right">
                  {experience.fromYear} - {experience.toYear}
                </p>
              </div>
            </Fragment>
          ))}
        </div>
      </div>
    
      {/* <div className="flex flex-col gap-4 col-span-full justify-center items-center">
        <PrimaryLink href="/" variant="default">
          Contact me
        </PrimaryLink>
      </div>  */}
    </section>
  );
};

const WhatsIcon = () => {
  return (
    <svg
      width="20"
      height="19"
      viewBox="0 0 20 19"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15.7325 11.0383L12.6553 9.57673C12.5342 9.51939 12.3993 9.49342 12.2642 9.50144C12.1291 9.50946 11.9987 9.55118 11.886 9.6224L10.4734 10.5176C9.82491 10.179 9.29126 9.67205 8.93477 9.05606L9.87717 7.71418C9.95214 7.60716 9.99607 7.48324 10.0045 7.35493C10.0129 7.22662 9.98561 7.09847 9.92525 6.98341L8.38664 4.06034C8.32287 3.938 8.22429 3.83507 8.10209 3.76323C7.97989 3.69138 7.83894 3.65349 7.69523 3.65385C6.67507 3.65385 5.69669 4.0388 4.97533 4.72403C4.25396 5.40926 3.84871 6.33863 3.84871 7.30769C3.85125 9.43888 4.74363 11.4821 6.33008 12.9891C7.91653 14.4961 10.0675 15.3437 12.3111 15.3462C12.8162 15.3462 13.3164 15.2516 13.7831 15.068C14.2497 14.8844 14.6738 14.6153 15.031 14.276C15.3881 13.9367 15.6715 13.5339 15.8648 13.0906C16.0581 12.6473 16.1576 12.1721 16.1576 11.6923C16.1577 11.5565 16.118 11.4234 16.0429 11.3079C15.9678 11.1924 15.8604 11.099 15.7325 11.0383ZM12.3111 13.8846C10.4754 13.8827 8.71549 13.1891 7.41748 11.9561C6.11947 10.7232 5.38935 9.05141 5.38732 7.30769C5.38717 6.80083 5.57191 6.30958 5.91012 5.91753C6.24832 5.52549 6.71909 5.25688 7.2423 5.1574L8.34625 7.25837L7.40674 8.58654C7.33653 8.68658 7.29339 8.80152 7.28115 8.92119C7.2689 9.04085 7.28793 9.16154 7.33654 9.27255C7.88696 10.5152 8.92767 11.5038 10.2359 12.0266C10.3531 12.0749 10.4811 12.0946 10.6083 12.0841C10.7356 12.0736 10.8581 12.0331 10.9648 11.9663L12.3697 11.0766L14.5815 12.1253C14.4759 12.6229 14.1919 13.0702 13.7779 13.3911C13.3638 13.7119 12.8454 13.8864 12.3111 13.8846ZM10.0031 2.26242e-07C8.2765 -0.000357676 6.57918 0.423927 5.07637 1.23156C3.57357 2.03918 2.31649 3.20264 1.42749 4.60869C0.538481 6.01473 0.0478427 7.61546 0.00332527 9.25506C-0.0411921 10.8947 0.361928 12.5173 1.17345 13.965L0.0819983 17.0753C-0.00840978 17.3329 -0.0215301 17.6092 0.0441079 17.8734C0.109746 18.1376 0.251548 18.3792 0.453622 18.5712C0.655695 18.7631 0.910053 18.8978 1.18819 18.9602C1.46632 19.0225 1.75724 19.0101 2.02834 18.9242L5.30269 17.8874C6.64394 18.5651 8.13009 18.9436 9.64833 18.9942C11.1666 19.0448 12.677 18.7661 14.0649 18.1795C15.4529 17.5928 16.6819 16.7134 17.6587 15.6082C18.6355 14.503 19.3343 13.2009 19.7023 11.8008C20.0702 10.4007 20.0975 8.93932 19.7821 7.52769C19.4667 6.11606 18.8169 4.79123 17.882 3.65377C16.9471 2.51631 15.7517 1.59611 14.3865 0.963021C13.0214 0.329932 11.5223 0.000592133 10.0031 2.26242e-07ZM10.0031 17.5385C8.51548 17.5394 7.05392 17.1673 5.7662 16.4597C5.67192 16.4077 5.56709 16.3754 5.45867 16.3649C5.35025 16.3543 5.2407 16.3658 5.13729 16.3985L1.54079 17.5385L2.73995 14.1221C2.77451 14.0239 2.78673 13.9199 2.77579 13.8169C2.76485 13.7139 2.731 13.6143 2.67648 13.5247C1.74367 11.9928 1.36915 10.2112 1.61102 8.45643C1.85289 6.70165 2.69763 5.07174 4.01419 3.81954C5.33075 2.56735 7.04555 1.76286 8.89255 1.53089C10.7396 1.29892 12.6155 1.65243 14.2294 2.53658C15.8434 3.42073 17.105 4.78609 17.8187 6.42086C18.5323 8.05563 18.6581 9.86842 18.1765 11.578C17.6948 13.2876 16.6327 14.7985 15.1549 15.8762C13.6771 16.9539 11.8662 17.5382 10.0031 17.5385Z"
        fill="white"
      />
    </svg>
  );
};
const LinkedinIcon = () => (
  <svg
    width="19"
    height="19"
    viewBox="0 0 19 19"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M17.5287 0H1.45177C1.06415 0 0.692401 0.153983 0.418309 0.428075C0.144217 0.702166 -0.00976562 1.07391 -0.00976562 1.46154V17.5385C-0.00976562 17.9261 0.144217 18.2978 0.418309 18.5719C0.692401 18.846 1.06415 19 1.45177 19H17.5287C17.9163 19 18.2881 18.846 18.5622 18.5719C18.8363 18.2978 18.9902 17.9261 18.9902 17.5385V1.46154C18.9902 1.07391 18.8363 0.702166 18.5622 0.428075C18.2881 0.153983 17.9163 0 17.5287 0ZM17.5287 17.5385H1.45177V1.46154H17.5287V17.5385ZM6.56716 8.03846V13.8846C6.56716 14.0784 6.49017 14.2643 6.35312 14.4013C6.21607 14.5384 6.0302 14.6154 5.83639 14.6154C5.64258 14.6154 5.4567 14.5384 5.31966 14.4013C5.18261 14.2643 5.10562 14.0784 5.10562 13.8846V8.03846C5.10562 7.84465 5.18261 7.65878 5.31966 7.52173C5.4567 7.38468 5.64258 7.30769 5.83639 7.30769C6.0302 7.30769 6.21607 7.38468 6.35312 7.52173C6.49017 7.65878 6.56716 7.84465 6.56716 8.03846ZM14.6056 10.5962V13.8846C14.6056 14.0784 14.5286 14.2643 14.3916 14.4013C14.2545 14.5384 14.0687 14.6154 13.8748 14.6154C13.681 14.6154 13.4952 14.5384 13.3581 14.4013C13.2211 14.2643 13.1441 14.0784 13.1441 13.8846V10.5962C13.1441 10.1116 12.9516 9.64694 12.609 9.30432C12.2664 8.96171 11.8017 8.76923 11.3172 8.76923C10.8326 8.76923 10.3679 8.96171 10.0253 9.30432C9.68271 9.64694 9.49023 10.1116 9.49023 10.5962V13.8846C9.49023 14.0784 9.41324 14.2643 9.2762 14.4013C9.13915 14.5384 8.95328 14.6154 8.75947 14.6154C8.56565 14.6154 8.37978 14.5384 8.24273 14.4013C8.10569 14.2643 8.0287 14.0784 8.0287 13.8846V8.03846C8.0296 7.85946 8.09618 7.68702 8.21579 7.55385C8.33539 7.42068 8.49972 7.33604 8.6776 7.31599C8.85547 7.29594 9.03451 7.34187 9.18077 7.44507C9.32703 7.54827 9.43032 7.70156 9.47105 7.87587C9.9654 7.54051 10.5418 7.34615 11.1383 7.31365C11.7347 7.28115 12.3288 7.41174 12.8567 7.6914C13.3845 7.97106 13.8262 8.38923 14.1344 8.90099C14.4425 9.41275 14.6054 9.99879 14.6056 10.5962ZM6.93254 5.48077C6.93254 5.69757 6.86825 5.9095 6.74781 6.08976C6.62736 6.27002 6.45616 6.41052 6.25587 6.49348C6.05557 6.57645 5.83517 6.59816 5.62254 6.55586C5.40991 6.51357 5.21459 6.40917 5.06129 6.25587C4.90799 6.10257 4.80359 5.90725 4.7613 5.69462C4.719 5.48199 4.74071 5.26159 4.82367 5.06129C4.90664 4.86099 5.04714 4.6898 5.2274 4.56935C5.40766 4.4489 5.61959 4.38462 5.83639 4.38462C6.12711 4.38462 6.40592 4.5001 6.61149 4.70567C6.81705 4.91124 6.93254 5.19005 6.93254 5.48077Z"
      fill="white"
    />
  </svg>
);

const SocialButton = ({
  icon,
  href,
}: {
  icon: React.ReactNode;
  href: string;
}) => {
  return (
    <a
      href={href}
      target="_blank"
      className="flex justify-center items-center p-2 bg-black/30 backdrop-blur-3xl rounded-full"
    >
      {icon}
    </a>
  );
};
